library(brms)
install.packages("languageserver")
install.packages("httpgd")
install.packages("ggdag")
install.packages("dagitty")
library(nycflights13)
library(tidyverse)
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(
arr_delay = mean(arr_delay, na.rm=TRUE)
)
flights %>%
filter(dep_delay>120)
flights |>
filter(month==1 | month==2)
flights |>
filter(month %in% c(1,2))
jan1 <- flights |>
filter(month==1 & day==1)
jan1
flights |>
arrange(year, month, day, dep_time)
flights |>
arrange(desc(dep_delay))
flights |>
distinct(origin, dest, .keep_all = TRUE)
flights |>
count(origin, dest, sort=TRUE)
flights
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time *60
)
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time *60,
.before = 1
)
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time *60,
.keep = "used"
)
flights |>
select(year, month, day)
flights |>
select(tailnum)
flights |>
select(tail_num = tailnum)
flights |>
select(ends_with("delay"))
flights |>
filter(dest == "IAH") |>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_time, carrier, flight, speed) |>
arrange(desc(speed))
mtcars %>%
group_by(cyl) %>%
summarize(n = n())
mtcars |>
group_by(cyl) |>
summarize(n = n())
flights |>
group_by(month)
flights |>
summarize(
avg_delay = mean(dep_delay)
)
flights |>
groupby(month) |>
summarize(
avg_delay = mean(dep_delay)
)
flights |>
group_by(month) |>
summarize(
avg_delay = mean(dep_delay)
)
flights |>
group_by(month) |>
summarize(
avg_delay = mean(dep_delay, na.rm=TRUE)
)
flights |>
group_by(month) |>
summarize(
delay = mean(dep_delay, na.rm=TRUE),
n = n()
)
flights |>
slice_max(arr_delay, n = 1)
flights |>
group_by(dest) |>
slice_max(arr_delay, n = 1) |>
relocate(dest)
daily <- flights |>
group_by(year, month, day)
daily
daily_flights <- daily |>
summarize(n = n())
daily_flights <- daily |>
summarize(n = n())
daily_flights
daily_flights <- daily |>
summarize(n = n(),
.groups = "drop_last")
daily_flights
install.packages("Lahman")
library(Lahman)
batters <- Lahman::Batting |>
group_by(playerID) |>
summarize(
performance = sum(H, na.rm=TRUE) / sum(AB, na.rm=TRUE),
n = sum(AB, na.rm=TRUE)
)
batters
batters |>
filter(n > 100) |>
ggplot(aes(x=n, y=performance)) +
geom_point(alpha=1/10) +
geom_smooth(se=FALSE)
install.packages("reticulate")
install.packages("bayesrules")
install.packages("tidybayes")
install.packages("broom.mixed")
library(reticulate)
setwd("~/GithubRepos/udemy/dswr_tidyverse_2023_intihar")
library(tidyverse)
df <- mpg
filter(df, manufacturer == "audi")
filter(df, manufacturer == "audi", year == 1999)
filter(df, manufacturer == "audi" & year == 1999)
filter(df, manufacturer == "audi" | manufacturer == "dodge")
filter(df, hwy >= 30)
filter(df, year != 1999)
slice(df, 1:5)
slice(df, 20:30)
20:30
slice(df, (nrow(df)-9):nrow(df))
arrange(df, year)
arrange(df, desc(year))
arrange(df, year, cyl, displ)
df.sort <- arrange(df, year, cyl, displ)
View(df.sort)
df.sort <- arrange(df, year, desc(cyl), displ)
View(df.sort)
df.example <- data.frame(id = 1:3,
name = c("john", "max", "julia"))
df.example <- bind_rows(df.example, slice(df.example, 2))
View(df.example)
df.example
df.example <- arrange(df.example, id)
df.example
distinct(df.example)
df.dupl <- select(df, manufacturer, model)
View(df.dupl)
df.nodupl <- distince(df.dupl)
df.nodupl <- distinct(df.dupl)
View(df.nodupl)
sample_n(df, 5)
sample_frac(df, 0.5*nrow(df))
sample_frac(df, 0.5*nrow(df)/nrow(df))
set.seed(567)
sample_n(df, 5)
sample_n(df, 10)
sample_n(df, size=10, replace=FALSE)
sample_n(df, size=10, replace=FALSE)
set.seed(567)
sample_n(df, size=10, replace=FALSE)
sample_n(df, size=10, replace=TRUE)
sample_frac(df, 0.1, replace=FALSE)
summarize(df, `mean hwy` = mean(hwy))
summarize(df,
rows = n()
)
summarize(df,
rows = n(),
`nr models` = n_distinct(model)
)
summarize(df,
`min hwy` = min(hwy),
`min cty` = min(cty),
`max hwy` = max(hwy),
`max cty` = max(cty)
)
df
group_by(df, manufacturer)
summarize(group_by(df, manufacturer),
cars = n(),
)
summarize(df,
`min hwy` = min(hwy),
`min cty` = min(cty),
`max hwy` = max(hwy),
`max cty` = max(cty)
)
df.group_model <- group_by(df, model)
summarize(df.group_model,
`min hwy` = min(hwy),
`min cty` = min(cty),
`max hwy` = max(hwy),
`max cty` = max(cty)
)
count(df)
count(df, model)
df %>%
filter(manufacturer == "audi") %>%
count()
df %>%
filter(manufacturer == "dodge" | manufacturer == "chevrolet") %>%
select(manufacturer, model, year, class)
df1 <- df %>%
filter(manufacturer == "dodge" | manufacturer == "chevrolet") %>%
select(manufacturer, model, year, class)
df %>%
group_by(manufacturer, model, class, trans) %>%
summarize(`avg hwy` = mean(hwy)) %>%
filter(`avg hwy` > 30) %>%
arrange(desc(`avg hwy`))
df %>%
group_by(manufacturer, model, class, trans) %>%
summarize(`avg hwy` = mean(hwy),
cars = n()) %>%
ungroup() %>%
filter(`avg hwy` > 30) %>%
arrange(desc(`avg hwy`))
df %>%
group_by(manufacturer, model, class, trans) %>%
summarize(`avg hwy` = mean(hwy),
cars = n()) %>%
# ungroup() %>%
filter(`avg hwy` > 30) %>%
arrange(desc(`avg hwy`))
table.long <- data.frame(id=1:6,
type=c("a", "b", "a", "c", "c", "a"),
count=c(20, 50, 45, 15, 12, 5))
table.long
table.wide <- pivot_wider(table.long,
names_from = type,
values_from = count)
table.wide
table.long1 <- pivot_longer(table.wide,
cols = c("a", "b", "c"),
names_to = "type",
values_to = "count")
table.long1
table.long1 <- pivot_longer(table.wide,
cols = c("a", "b", "c"),
names_to = "type",
values_to = "count",
values_drop_na = TRUE)
table.long1
df %>%
filter(manufacturer == "jeep" | manufacturer == "land rover" | manufacturer == "hyundai") %>%
select(model, trans, hwy) %>%
group_by(model, trans) %>%
summarize(`avg hwy` = mean(hwy))
df %>%
filter(manufacturer == "jeep" | manufacturer == "land rover" | manufacturer == "hyundai") %>%
select(model, trans, hwy) %>%
group_by(model, trans) %>%
summarize(`avg hwy` = mean(hwy)) %>%
ungroup()
df.long %>%
filter(manufacturer == "jeep" | manufacturer == "land rover" | manufacturer == "hyundai") %>%
select(model, trans, hwy) %>%
group_by(model, trans) %>%
summarize(`avg hwy` = mean(hwy)) %>%
ungroup()
df.long <- df %>%
filter(manufacturer == "jeep" | manufacturer == "land rover" | manufacturer == "hyundai") %>%
select(model, trans, hwy) %>%
group_by(model, trans) %>%
summarize(`avg hwy` = mean(hwy)) %>%
ungroup()
df.long
df.wide <- df.long %>%
pivot_wider(names_from = trans, values_from = `avg hwy`)
df.wide
df.long1 <- df.wide %>%
pivot_longer(-model,
names_to = trans,
values_to = `avg hwy`,
values_drop_na = TRUE)
df.long1 <- df.wide %>%
pivot_longer(-model,
names_to = "trans",
values_to = "avg hwy",
values_drop_na = TRUE)
df.long1
df.long1
